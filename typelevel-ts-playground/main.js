import { demonstrateConditionalTypes } from './conditional-types.js';
import { demonstrateMappedTransformations } from './mapped-transformations.js';
import { demonstrateRecursiveParsing } from './recursive-parsing.js';
import { demonstrateStringManipulation } from './string-manipulation.js';
import { demonstrateTupleOperations } from './tuple-operations.js';
import { resultsCapitalCase } from './captalize.js';
import { resultsPlus18 } from './pattern-matcher-type.js';
import { resultNotNull } from './not-null.js';
import { resultsPlusOne } from './plus-one.js';
import { resultsExtract } from './extract.js';
function main() {
    console.log("ðŸš€ TypeScript Type-Level Programming Showcase\n");
    console.log("1. Conditional Types:");
    console.log("   - Type-level boolean logic");
    console.log("   - Function return type extraction");
    console.log("   - Deep readonly transformations");
    demonstrateConditionalTypes();
    console.log("");
    console.log("2. Mapped Type Transformations:");
    console.log("   - Property filtering by type");
    console.log("   - Key prefixing and manipulation");
    console.log("   - Getter/setter generation");
    demonstrateMappedTransformations();
    console.log("");
    console.log("3. Recursive Type Parsing:");
    console.log("   - JSON parsing at type-level");
    console.log("   - Array operations (reverse, join)");
    console.log("   - Deep flattening of nested structures");
    demonstrateRecursiveParsing();
    console.log("");
    console.log("4. String Manipulation:");
    console.log("   - Case conversions (camel, kebab, snake)");
    console.log("   - String splitting and replacement");
    console.log("   - URL building with type safety");
    demonstrateStringManipulation();
    console.log("");
    console.log("5. Tuple Operations:");
    console.log("   - Head, tail, and indexed access");
    console.log("   - Zip/unzip operations");
    console.log("   - Filtering and mapping at type-level");
    demonstrateTupleOperations();
    console.log("");
    console.log("6. Capitalize Function:");
    console.log("   - Capitalizes the first letter of a string");
    console.log("   - Preserves the rest of the string");
    console.log("   - Demonstrates type-level transformations");
    resultsCapitalCase();
    console.log("7. Pattern Matching:");
    console.log("   - Compile-time validation of data structures");
    console.log("   - Extracting and transforming nested properties");
    console.log("   - Enforcing invariants in complex types");
    resultsPlus18();
    console.log("8. Not Null:");
    console.log("   - Compile-time exclusion of null/undefined");
    console.log("   - Ensures values are always present");
    console.log("   - Demonstrates type-level filtering");
    resultNotNull();
    console.log("9. Plus One:");
    console.log("   - Increments each number in a tuple");
    console.log("   - Demonstrates mapped type transformations");
    resultsPlusOne();
    console.log("10. Extract Path:");
    console.log("   - Extracts path segments from URLs");
    console.log("   - Demonstrates recursive string parsing");
    resultsExtract();
    console.log("11. If Type:");
    console.log("   - Conditional type selection based on boolean");
    console.log("   - Demonstrates basic type-level logic");
    import('./if.js').then(module => {
        module.resultsIF();
    });
}
main();
